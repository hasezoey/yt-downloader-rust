[package]
name = "ytdlr"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
rust-version.workspace = true
build = "build.rs"
repository.workspace = true

[dependencies]
clap = { version = "~4.5", features = ["derive", "wrap_help", "env"] }
clap_complete = "~4.5"
indicatif = { version = "0.17.9", features = ["improved_unicode"] }
colored = "3.0.0"
log.workspace = true
flexi_logger = "0.29" # this logger, because "env_logger" and "simple_logger" do not provide setting the log level dynamically
is-terminal = "0.4"
libytdlr = { path = "../libytdlr" }
dirs.workspace = true
terminal_size = "0.4"
regex.workspace = true
sysinfo = { version = "0.35.2", default-features = false, features = ["system"]}
ctrlc = { version = "3", features = ["termination"] }
# the following 2 are required to get the correct boundaries to truncate at
unicode-segmentation = "1.11" # cluster all characters into display-able characters
unicode-width = "0.2" # get display width of a given string

[dev-dependencies]
tempfile.workspace = true

[[bin]]
name = "ytdlr"
path = "src/main.rs"

[lints]
workspace = true

[features]
default = [
	# included as default, because unicode-width is basically only used to count available space for progress-bar message truncation
	# which will only result in terminals which display 2 to work correctly (not going to a new-line) and terminals which display 1 to just have less characters displayed
	"workaround_fe0f",
]
# Feature to count unicode code-point "\u{fe0f}" (VS16, render emoji in emoji-style) as a additional display position
# this basically works-around any terminal that displays it as 2 characters, but unicode-width only thinking it is 1 character
# Example terminals which display this as 2:
# - KDE Konsole (23.08.4)
# Example terminals which display this as 1:
# - Alacritty (0.12.3)
workaround_fe0f = []
